<?php
/**
 * This is a file automatically generated by the Mouf framework. Do not modify it, as it could be overwritten.
 */
use Mouf\MoufManager;
use Interop\Container\ContainerInterface;
MoufManager::initMoufManager();
$moufManager = MoufManager::getMoufManager();

$moufManager->getConfigManager()->setConstantsDefinitionArray(array (
  'NEO4J_HOST' => 
  array (
    'defaultValue' => 'localhost',
    'type' => 'string',
    'comment' => 'The host for the Neo4J database',
  ),
  'NEO4J_PORT' => 
  array (
    'defaultValue' => '7474',
    'type' => 'string',
    'comment' => 'The port of the Neo4J database',
  ),
  'ELASTICSEARCH_HOST' => 
  array (
    'defaultValue' => 'localhost',
    'type' => 'string',
    'comment' => 'The host name for the Elastic Search server',
  ),
  'ELASTICSEARCH_PORT' => 
  array (
    'defaultValue' => '9200',
    'type' => 'string',
    'comment' => 'The default port to connect to Elastic Search server',
  ),
  'SECRET' => 
  array (
    'defaultValue' => 'HLxRssObAZpJdFYfHJpT',
    'type' => 'string',
    'comment' => 'A random string. It should be different for any application deployed.',
  ),
  'DEBUG_MODE' => 
  array (
    'defaultValue' => true,
    'type' => 'bool',
    'comment' => 'When the application is in debug mode, stacktraces are outputed directly to the user. Otherwise, they are hidden.',
  ),
  'DOWNLOAD_DIR' => 
  array (
    'defaultValue' => 'downloads',
    'type' => 'string',
    'comment' => 'The download directory',
  ),
  'MONGODB_CONNECTIONSTRING' => 
  array (
    'defaultValue' => 'mongodb://localhost:27017',
    'type' => 'string',
    'comment' => 'Connection string to MongoDB',
  ),
));

$moufManager->setAllVariables(array (
  'splashDefaultSourceDirectory' => 'src/',
  'splashDefaultControllersNamespace' => 'Mouf\\Packanalyst\\Controllers\\',
  'splashDefaultViewsDirectory' => 'views/',
));

$moufManager->addComponentInstances(array (
  'annotationReader' => 
  array (
    'weak' => false,
    'comment' => '',
    'class' => 'Doctrine\\Common\\Annotations\\CachedReader',
    'external' => false,
    'code' => '// Using composer autoloader
$loader = require ROOT_PATH . \'vendor/autoload.php\';
Doctrine\\Common\\Annotations\\AnnotationRegistry::registerLoader(array($loader, \'loadClass\'));

// Creating a new AnnotationReader
$reader = new Doctrine\\Common\\Annotations\\AnnotationReader();
return new Doctrine\\Common\\Annotations\\CachedReader($reader, new Doctrine\\Common\\Cache\\ArrayCache());',
  ),
  'apcCacheService' => 
  array (
    'class' => 'Mouf\\Utils\\Cache\\ApcCache',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'defaultTimeToLive' => 
      array (
        'value' => 3600,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'fieldBinds' => 
    array (
      'fallback' => 'fileCacheService',
    ),
  ),
  'block.content' => 
  array (
    'class' => 'Mouf\\Html\\HtmlElement\\HtmlBlock',
    'external' => false,
    'weak' => false,
  ),
  'block.footer' => 
  array (
    'class' => 'Mouf\\Html\\HtmlElement\\HtmlBlock',
    'external' => false,
    'weak' => false,
  ),
  'block.header' => 
  array (
    'class' => 'Mouf\\Html\\HtmlElement\\HtmlBlock',
    'external' => false,
    'weak' => false,
  ),
  'block.left' => 
  array (
    'class' => 'Mouf\\Html\\HtmlElement\\HtmlBlock',
    'external' => false,
    'weak' => false,
  ),
  'block.right' => 
  array (
    'class' => 'Mouf\\Html\\HtmlElement\\HtmlBlock',
    'external' => false,
    'weak' => false,
  ),
  'bootstrapRenderer' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\FileBasedRenderer',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'vendor/mouf/html.template.bootstrap/src/templates',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'rendererCacheService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'template',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 0,
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'bootstrapTemplate' => 
  array (
    'class' => 'Mouf\\Html\\Template\\BootstrapTemplate',
    'external' => false,
    'weak' => false,
    'setterBinds' => 
    array (
      'setContent' => 'block.content',
      'setLeft' => 'block.left',
      'setRight' => 'block.right',
      'setHeader' => 'block.header',
      'setFooter' => 'block.footer',
      'setWebLibraryManager' => 'defaultWebLibraryManager',
      'setTemplateRenderer' => 'bootstrapRenderer',
      'setDefaultRenderer' => 'defaultRenderer',
    ),
  ),
  'classAnalyzerController' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Controllers\\ClassAnalyzerController',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'psr.errorLogLogger',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'bootstrapTemplate',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'block.content',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 'twigEnvironment',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      4 => 
      array (
        'value' => 'itemNameRepository',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'classesDetector' => 
  array (
    'class' => 'Mouf\\Packanalyst\\ClassesDetector',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'itemNameRepository',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'itemRepository',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'packageVersionRepository',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 'colorLogger',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      4 => 
      array (
        'value' => 'itemDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'colorLogger' => 
  array (
    'class' => 'GAubry\\Logger\\ColoredIndentedLogger',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'return array(
    \'colors\' => array(
        \'debug\' => "\\033[0;35m",
        \'error\' => "\\033[1;31m",
        \'section\' => "\\033[1;37m",
        \'subsection\' => "\\033[1;33m",
        \'ok\' => "\\033[1;32m"
    )
);',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'component.typeaheadjs' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 
        array (
          0 => 'components/typeaheadjs/typeahead.bundle.min.js',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 
        array (
        ),
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterBinds' => 
    array (
      'setRenderer' => 'defaultWebLibraryRenderer',
    ),
  ),
  'customRenderer' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\FileBasedRenderer',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'src/templates',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'rendererCacheService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'custom',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 0,
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'defaultLanguageDetection' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Language\\BrowserLanguageDetection',
    'external' => false,
    'weak' => false,
  ),
  'defaultRenderer' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\AutoChainRenderer',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'rendererCacheService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'defaultTranslationService' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Translate\\FinePHPArrayTranslationService',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'i18nMessagePath' => 
      array (
        'value' => 'resources/',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterBinds' => 
    array (
      'setLanguageDetection' => 'defaultLanguageDetection',
    ),
  ),
  'defaultWebLibraryManager' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibraryManager',
    'external' => false,
    'weak' => false,
    'setterBinds' => 
    array (
      'setWebLibraries' => 
      array (
        0 => 'rootUrlInlineWebLibrary',
        1 => 'jQueryLibrary',
        2 => 'javascript.bootstrap',
        3 => 'messageServiceLibrary',
        4 => 'component.typeaheadjs',
        5 => 'stylesWebLibrary',
      ),
    ),
    'setterProperties' => 
    array (
    ),
  ),
  'defaultWebLibraryRenderer' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\DefaultWebLibraryRenderer',
    'external' => false,
  ),
  'elasticSearchClient' => 
  array (
    'class' => 'Elasticsearch\\Client',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'return [
    \'hosts\'=>[ELASTICSEARCH_HOST.\':\'.ELASTICSEARCH_PORT]
];',
        'parametertype' => 'primitive',
        'type' => 'php',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'elasticSearchService' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Services\\ElasticSearchService',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'itemNameRepository',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'elasticSearchClient',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'emailValidator' => 
  array (
    'class' => 'Mouf\\Utils\\Common\\Validators\\EmailValidator',
    'external' => false,
    'weak' => false,
  ),
  'errorLogLogger' => 
  array (
    'class' => 'Mouf\\Utils\\Log\\ErrorLogLogger',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'level' => 
      array (
        'value' => 4,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'fetchDataService' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Services\\FetchDataService',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'neo4jEntityManager',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'classesDetector',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'packageRepository',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 'packageVersionRepository',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      4 => 
      array (
        'value' => 'colorLogger',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      5 => 
      array (
        'value' => 'itemDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      6 => 
      array (
        'value' => 'packageDao',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'fileCacheService' => 
  array (
    'class' => 'Mouf\\Utils\\Cache\\FileCache',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'defaultTimeToLive' => 
      array (
        'value' => 3600,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'fineCommonTranslationService' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Translate\\FinePHPArrayTranslationService',
    'external' => false,
    'weak' => false,
    'setterBinds' => 
    array (
      'setLanguageDetection' => 'defaultLanguageDetection',
    ),
    'fieldProperties' => 
    array (
      'i18nMessagePath' => 
      array (
        'value' => 'vendor/mouf/utils.i18n.fine/resources/',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'httpErrorsController' => 
  array (
    'class' => 'Mouf\\Mvc\\Splash\\Controllers\\HttpErrorsController',
    'external' => false,
    'weak' => false,
    'fieldBinds' => 
    array (
      'template' => 'bootstrapTemplate',
      'contentBlock' => 'block.content',
    ),
    'fieldProperties' => 
    array (
      'debugMode' => 
      array (
        'value' => 'DEBUG_MODE',
        'type' => 'config',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'itemDao' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Dao\\ItemDao',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'mongoItemsCollection',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'itemNameRepository' => 
  array (
    'weak' => false,
    'comment' => '',
    'class' => 'Mouf\\Packanalyst\\Repositories\\ItemNameRepository',
    'external' => false,
    'code' => '$repository = $container->get(\'neo4jEntityManager\')->getRepository(\'Mouf\\\\Packanalyst\\\\Entities\\\\ItemNameEntity\');
return $repository;',
  ),
  'itemRepository' => 
  array (
    'weak' => false,
    'comment' => '',
    'external' => false,
    'code' => '$repository = $container->get(\'neo4jEntityManager\')->getRepository(\'Mouf\\\\Packanalyst\\\\Entities\\\\ItemEntity\');
return $repository;',
    'class' => 'Mouf\\Packanalyst\\Repositories\\ItemRepository',
  ),
  'jQueryLibrary' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 
        array (
          0 => 'vendor/mouf/javascript.jquery.jquery/jquery-1.11.0.min.js',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 
        array (
        ),
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterBinds' => 
    array (
      'setRenderer' => 'defaultWebLibraryRenderer',
    ),
  ),
  'javascript.bootstrap' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 
        array (
          0 => 'vendor/twitter/bootstrap/dist/js/bootstrap.min.js',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 
        array (
          0 => 'vendor/twitter/bootstrap/dist/css/bootstrap.min.css',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterBinds' => 
    array (
      'setRenderer' => 'defaultWebLibraryRenderer',
    ),
  ),
  'messageServiceLibrary' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 
        array (
        ),
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 
        array (
          0 => 'vendor/mouf/html.widgets.messageservice/messages.css',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterBinds' => 
    array (
      'setRenderer' => 'defaultWebLibraryRenderer',
    ),
  ),
  'messageWidget' => 
  array (
    'class' => 'Mouf\\Html\\Widgets\\MessageService\\Widget\\MessageWidget',
    'external' => false,
    'weak' => false,
    'fieldBinds' => 
    array (
      'messageProvider' => 'userMessageService',
    ),
  ),
  'mongoClient' => 
  array (
    'weak' => false,
    'comment' => '',
    'external' => false,
    'code' => 'return new \\MongoClient(MONGODB_CONNECTIONSTRING);',
    'class' => 'MongoClient',
  ),
  'mongoItemsCollection' => 
  array (
    'weak' => false,
    'comment' => '',
    'external' => false,
    'code' => 'return $container->get(\'mongoPackanalystDb\')->items;',
    'class' => 'MongoCollection',
  ),
  'mongoPackagesCollection' => 
  array (
    'weak' => false,
    'comment' => '',
    'class' => 'MongoCollection',
    'external' => false,
    'code' => 'return $container->get(\'mongoPackanalystDb\')->packages;',
  ),
  'mongoPackanalystDb' => 
  array (
    'weak' => false,
    'comment' => '',
    'external' => false,
    'code' => 'return $container->get(\'mongoClient\')->packanalyst;',
    'class' => 'MongoDB',
  ),
  'neo4jEntityManager' => 
  array (
    'weak' => false,
    'comment' => '',
    'external' => false,
    'code' => '$em = new HireVoice\\Neo4j\\EntityManager(array(
    \'transport\' => \'curl\', // or \'stream\'
    \'host\' => NEO4J_HOST,
    \'port\' => NEO4J_PORT,
    // \'username\' => null,
    // \'password\' => null,
    // \'proxy_dir\' => \'/tmp\',
    // \'debug\' => true, // Force proxy regeneration on each request
    \'annotation_reader\' => $container->get(\'annotationReader\') // Should be a cached instance of the doctrine annotation reader in production
));
return $em;',
    'class' => 'HireVoice\\Neo4j\\EntityManager',
  ),
  'noCacheService' => 
  array (
    'class' => 'Mouf\\Utils\\Cache\\NoCache',
    'external' => false,
    'weak' => false,
  ),
  'numericValidatorDecimals' => 
  array (
    'class' => 'Mouf\\Utils\\Common\\Validators\\NumericValidator',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'allowDecimals' => 
      array (
        'value' => true,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'packageDao' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Dao\\PackageDao',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'mongoPackagesCollection',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'packageRenderer_mouf/html.widgets.menu' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\FileBasedRenderer',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'vendor/mouf/html.widgets.menu/src/templates',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'rendererCacheService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'package',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 0,
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'packageRenderer_mouf/html.widgets.messageservice' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\FileBasedRenderer',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'vendor/mouf/html.widgets.messageservice/src/templates',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'rendererCacheService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'package',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      3 => 
      array (
        'value' => 0,
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'packageRepository' => 
  array (
    'weak' => false,
    'comment' => '',
    'class' => 'Mouf\\Packanalyst\\Repositories\\PackageRepository',
    'external' => false,
    'code' => '$repository = $container->get(\'neo4jEntityManager\')->getRepository(\'Mouf\\\\Packanalyst\\\\Entities\\\\PackageEntity\');
return $repository;',
  ),
  'packageVersionRepository' => 
  array (
    'weak' => false,
    'comment' => '',
    'class' => 'Mouf\\Packanalyst\\Repositories\\PackageVersionRepository',
    'external' => false,
    'code' => '$repository = $container->get(\'neo4jEntityManager\')->getRepository(\'Mouf\\\\Packanalyst\\\\Entities\\\\PackageVersionEntity\');
return $repository;',
  ),
  'psr.errorLogLogger' => 
  array (
    'class' => 'Mouf\\Utils\\Log\\Psr\\ErrorLogLogger',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'warning',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'rendererCacheService' => 
  array (
    'class' => 'Mouf\\Utils\\Cache\\InMemoryCache',
    'external' => false,
    'weak' => false,
    'fieldBinds' => 
    array (
      'chainWith' => 'apcCacheService',
    ),
  ),
  'requiredValidator' => 
  array (
    'class' => 'Mouf\\Utils\\Common\\Validators\\RequiredValidator',
    'external' => false,
    'weak' => false,
  ),
  'rootController' => 
  array (
    'class' => 'Mouf\\Packanalyst\\Controllers\\RootController',
    'external' => false,
    'fieldBinds' => 
    array (
    ),
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'bootstrapTemplate',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 'block.content',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      2 => 
      array (
        'value' => 'elasticSearchService',
        'parametertype' => 'object',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'rootUrlInlineWebLibrary' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\InlineWebLibrary',
    'external' => false,
    'weak' => false,
    'fieldBinds' => 
    array (
      'jsElement' => 'rootUrlJsFile',
    ),
  ),
  'rootUrlJsFile' => 
  array (
    'class' => 'Mouf\\Html\\HtmlElement\\HtmlFromFile',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => 'vendor/mouf/html.utils.weblibrarymanager/javascript/rootUrl.php',
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'sessionManager' => 
  array (
    'class' => 'Mouf\\Utils\\Session\\SessionManager\\DefaultSessionManager',
    'external' => false,
  ),
  'splash' => 
  array (
    'class' => 'Mouf\\Mvc\\Splash\\Splash',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'debugMode' => 
      array (
        'value' => 'DEBUG_MODE',
        'type' => 'config',
        'metadata' => 
        array (
        ),
      ),
    ),
    'fieldBinds' => 
    array (
      'http404Handler' => 'httpErrorsController',
      'http500Handler' => 'httpErrorsController',
      'cacheService' => 'splashCacheApc',
    ),
  ),
  'splashBrowserLanguageDetection' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Language\\BrowserLanguageDetection',
    'external' => false,
    'weak' => false,
  ),
  'splashCacheApc' => 
  array (
    'class' => 'Mouf\\Utils\\Cache\\ApcCache',
    'external' => false,
    'weak' => false,
    'fieldBinds' => 
    array (
      'fallback' => 'splashCacheFile',
    ),
    'fieldProperties' => 
    array (
      'prefix' => 
      array (
        'value' => 'SECRET',
        'type' => 'config',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'splashCacheFile' => 
  array (
    'class' => 'Mouf\\Utils\\Cache\\FileCache',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'cacheDirectory' => 
      array (
        'value' => 'splashCache/',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      'prefix' => 
      array (
        'value' => 'SECRET',
        'type' => 'config',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'splashTranslateService' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Translate\\FinePHPArrayTranslationService',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'i18nMessagePath' => 
      array (
        'value' => 'vendor/mouf/mvc.splash-common/resources/',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterBinds' => 
    array (
      'setLanguageDetection' => 'splashBrowserLanguageDetection',
    ),
  ),
  'stylesWebLibrary' => 
  array (
    'class' => 'Mouf\\Html\\Utils\\WebLibraryManager\\WebLibrary',
    'external' => false,
    'weak' => false,
    'constructor' => 
    array (
      0 => 
      array (
        'value' => NULL,
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      1 => 
      array (
        'value' => 
        array (
          0 => 'src/views/css/styles.css',
        ),
        'parametertype' => 'primitive',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'twigEnvironment' => 
  array (
    'class' => 'Mouf\\Html\\Renderer\\Twig\\MoufTwigEnvironment',
    'external' => false,
    'weak' => false,
  ),
  'uRLValidatorFtpHttps' => 
  array (
    'class' => 'Mouf\\Utils\\Common\\Validators\\URLValidator',
    'external' => false,
    'weak' => false,
    'fieldProperties' => 
    array (
      'allowFtp' => 
      array (
        'value' => true,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
      'allowHttps' => 
      array (
        'value' => true,
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
  ),
  'userMessageService' => 
  array (
    'class' => 'Mouf\\Html\\Widgets\\MessageService\\Service\\SessionMessageService',
    'external' => false,
    'weak' => false,
    'fieldBinds' => 
    array (
      'sessionManager' => 'sessionManager',
    ),
  ),
  'validatorsBrowserLanguageDetection' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Language\\BrowserLanguageDetection',
    'external' => false,
  ),
  'validatorsTranslateService' => 
  array (
    'class' => 'Mouf\\Utils\\I18n\\Fine\\Translate\\FinePHPArrayTranslationService',
    'external' => false,
    'fieldProperties' => 
    array (
      'i18nMessagePath' => 
      array (
        'value' => 'vendor/mouf/utils.common.validators/src/resources/',
        'type' => 'string',
        'metadata' => 
        array (
        ),
      ),
    ),
    'setterBinds' => 
    array (
      'setLanguageDetection' => 'validatorsBrowserLanguageDetection',
    ),
  ),
));


unset($moufManager);

/**
 * This is the base class of the Manage Object User Friendly or Modular object user framework (MOUF) framework.
 * This object can be used to get the objects manage by MOUF.
 *
 */
class Mouf {
	public function getClosures() {
		return [
			'annotationReader' => function(ContainerInterface $container) {
				// Using composer autoloader
$loader = require ROOT_PATH . 'vendor/autoload.php';
Doctrine\Common\Annotations\AnnotationRegistry::registerLoader(array($loader, 'loadClass'));

// Creating a new AnnotationReader
$reader = new Doctrine\Common\Annotations\AnnotationReader();
return new Doctrine\Common\Annotations\CachedReader($reader, new Doctrine\Common\Cache\ArrayCache());
			},
			'colorLogger' => [
				'constructor' => [
					0 => function(ContainerInterface $container) {
						return array(
    'colors' => array(
        'debug' => "\033[0;35m",
        'error' => "\033[1;31m",
        'section' => "\033[1;37m",
        'subsection' => "\033[1;33m",
        'ok' => "\033[1;32m"
    )
);
					},
				],
			],
			'elasticSearchClient' => [
				'constructor' => [
					0 => function(ContainerInterface $container) {
						return [
    'hosts'=>[ELASTICSEARCH_HOST.':'.ELASTICSEARCH_PORT]
];
					},
				],
			],
			'itemNameRepository' => function(ContainerInterface $container) {
				$repository = $container->get('neo4jEntityManager')->getRepository('Mouf\\Packanalyst\\Entities\\ItemNameEntity');
return $repository;
			},
			'itemRepository' => function(ContainerInterface $container) {
				$repository = $container->get('neo4jEntityManager')->getRepository('Mouf\\Packanalyst\\Entities\\ItemEntity');
return $repository;
			},
			'mongoClient' => function(ContainerInterface $container) {
				return new \MongoClient(MONGODB_CONNECTIONSTRING);
			},
			'mongoItemsCollection' => function(ContainerInterface $container) {
				return $container->get('mongoPackanalystDb')->items;
			},
			'mongoPackagesCollection' => function(ContainerInterface $container) {
				return $container->get('mongoPackanalystDb')->packages;
			},
			'mongoPackanalystDb' => function(ContainerInterface $container) {
				return $container->get('mongoClient')->packanalyst;
			},
			'neo4jEntityManager' => function(ContainerInterface $container) {
				$em = new HireVoice\Neo4j\EntityManager(array(
    'transport' => 'curl', // or 'stream'
    'host' => NEO4J_HOST,
    'port' => NEO4J_PORT,
    // 'username' => null,
    // 'password' => null,
    // 'proxy_dir' => '/tmp',
    // 'debug' => true, // Force proxy regeneration on each request
    'annotation_reader' => $container->get('annotationReader') // Should be a cached instance of the doctrine annotation reader in production
));
return $em;
			},
			'packageRepository' => function(ContainerInterface $container) {
				$repository = $container->get('neo4jEntityManager')->getRepository('Mouf\\Packanalyst\\Entities\\PackageEntity');
return $repository;
			},
			'packageVersionRepository' => function(ContainerInterface $container) {
				$repository = $container->get('neo4jEntityManager')->getRepository('Mouf\\Packanalyst\\Entities\\PackageVersionEntity');
return $repository;
			},
		];
	}
	/**
	 * @return Doctrine\Common\Annotations\CachedReader
	 */
	 public static function getAnnotationReader() {
	 	return MoufManager::getMoufManager()->getInstance('annotationReader');
	 }

	/**
	 * @return Mouf\Utils\Cache\ApcCache
	 */
	 public static function getApcCacheService() {
	 	return MoufManager::getMoufManager()->getInstance('apcCacheService');
	 }

	/**
	 * @return Mouf\Html\HtmlElement\HtmlBlock
	 */
	 public static function getBlock_content() {
	 	return MoufManager::getMoufManager()->getInstance('block.content');
	 }

	/**
	 * @return Mouf\Html\HtmlElement\HtmlBlock
	 */
	 public static function getBlock_footer() {
	 	return MoufManager::getMoufManager()->getInstance('block.footer');
	 }

	/**
	 * @return Mouf\Html\HtmlElement\HtmlBlock
	 */
	 public static function getBlock_header() {
	 	return MoufManager::getMoufManager()->getInstance('block.header');
	 }

	/**
	 * @return Mouf\Html\HtmlElement\HtmlBlock
	 */
	 public static function getBlock_left() {
	 	return MoufManager::getMoufManager()->getInstance('block.left');
	 }

	/**
	 * @return Mouf\Html\HtmlElement\HtmlBlock
	 */
	 public static function getBlock_right() {
	 	return MoufManager::getMoufManager()->getInstance('block.right');
	 }

	/**
	 * @return Mouf\Html\Renderer\FileBasedRenderer
	 */
	 public static function getBootstrapRenderer() {
	 	return MoufManager::getMoufManager()->getInstance('bootstrapRenderer');
	 }

	/**
	 * @return Mouf\Html\Template\BootstrapTemplate
	 */
	 public static function getBootstrapTemplate() {
	 	return MoufManager::getMoufManager()->getInstance('bootstrapTemplate');
	 }

	/**
	 * @return Mouf\Packanalyst\Controllers\ClassAnalyzerController
	 */
	 public static function getClassAnalyzerController() {
	 	return MoufManager::getMoufManager()->getInstance('classAnalyzerController');
	 }

	/**
	 * @return Mouf\Packanalyst\ClassesDetector
	 */
	 public static function getClassesDetector() {
	 	return MoufManager::getMoufManager()->getInstance('classesDetector');
	 }

	/**
	 * @return GAubry\Logger\ColoredIndentedLogger
	 */
	 public static function getColorLogger() {
	 	return MoufManager::getMoufManager()->getInstance('colorLogger');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibrary
	 */
	 public static function getComponent_typeaheadjs() {
	 	return MoufManager::getMoufManager()->getInstance('component.typeaheadjs');
	 }

	/**
	 * @return Mouf\Html\Renderer\FileBasedRenderer
	 */
	 public static function getCustomRenderer() {
	 	return MoufManager::getMoufManager()->getInstance('customRenderer');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Language\BrowserLanguageDetection
	 */
	 public static function getDefaultLanguageDetection() {
	 	return MoufManager::getMoufManager()->getInstance('defaultLanguageDetection');
	 }

	/**
	 * @return Mouf\Html\Renderer\AutoChainRenderer
	 */
	 public static function getDefaultRenderer() {
	 	return MoufManager::getMoufManager()->getInstance('defaultRenderer');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Translate\FinePHPArrayTranslationService
	 */
	 public static function getDefaultTranslationService() {
	 	return MoufManager::getMoufManager()->getInstance('defaultTranslationService');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibraryManager
	 */
	 public static function getDefaultWebLibraryManager() {
	 	return MoufManager::getMoufManager()->getInstance('defaultWebLibraryManager');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\DefaultWebLibraryRenderer
	 */
	 public static function getDefaultWebLibraryRenderer() {
	 	return MoufManager::getMoufManager()->getInstance('defaultWebLibraryRenderer');
	 }

	/**
	 * @return Elasticsearch\Client
	 */
	 public static function getElasticSearchClient() {
	 	return MoufManager::getMoufManager()->getInstance('elasticSearchClient');
	 }

	/**
	 * @return Mouf\Packanalyst\Services\ElasticSearchService
	 */
	 public static function getElasticSearchService() {
	 	return MoufManager::getMoufManager()->getInstance('elasticSearchService');
	 }

	/**
	 * @return Mouf\Utils\Common\Validators\EmailValidator
	 */
	 public static function getEmailValidator() {
	 	return MoufManager::getMoufManager()->getInstance('emailValidator');
	 }

	/**
	 * @return Mouf\Utils\Log\ErrorLogLogger
	 */
	 public static function getErrorLogLogger() {
	 	return MoufManager::getMoufManager()->getInstance('errorLogLogger');
	 }

	/**
	 * @return Mouf\Packanalyst\Services\FetchDataService
	 */
	 public static function getFetchDataService() {
	 	return MoufManager::getMoufManager()->getInstance('fetchDataService');
	 }

	/**
	 * @return Mouf\Utils\Cache\FileCache
	 */
	 public static function getFileCacheService() {
	 	return MoufManager::getMoufManager()->getInstance('fileCacheService');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Translate\FinePHPArrayTranslationService
	 */
	 public static function getFineCommonTranslationService() {
	 	return MoufManager::getMoufManager()->getInstance('fineCommonTranslationService');
	 }

	/**
	 * @return Mouf\Mvc\Splash\Controllers\HttpErrorsController
	 */
	 public static function getHttpErrorsController() {
	 	return MoufManager::getMoufManager()->getInstance('httpErrorsController');
	 }

	/**
	 * @return Mouf\Packanalyst\Dao\ItemDao
	 */
	 public static function getItemDao() {
	 	return MoufManager::getMoufManager()->getInstance('itemDao');
	 }

	/**
	 * @return Mouf\Packanalyst\Repositories\ItemNameRepository
	 */
	 public static function getItemNameRepository() {
	 	return MoufManager::getMoufManager()->getInstance('itemNameRepository');
	 }

	/**
	 * @return Mouf\Packanalyst\Repositories\ItemRepository
	 */
	 public static function getItemRepository() {
	 	return MoufManager::getMoufManager()->getInstance('itemRepository');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibrary
	 */
	 public static function getJQueryLibrary() {
	 	return MoufManager::getMoufManager()->getInstance('jQueryLibrary');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibrary
	 */
	 public static function getJavascript_bootstrap() {
	 	return MoufManager::getMoufManager()->getInstance('javascript.bootstrap');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibrary
	 */
	 public static function getMessageServiceLibrary() {
	 	return MoufManager::getMoufManager()->getInstance('messageServiceLibrary');
	 }

	/**
	 * @return Mouf\Html\Widgets\MessageService\Widget\MessageWidget
	 */
	 public static function getMessageWidget() {
	 	return MoufManager::getMoufManager()->getInstance('messageWidget');
	 }

	/**
	 * @return MongoClient
	 */
	 public static function getMongoClient() {
	 	return MoufManager::getMoufManager()->getInstance('mongoClient');
	 }

	/**
	 * @return MongoCollection
	 */
	 public static function getMongoItemsCollection() {
	 	return MoufManager::getMoufManager()->getInstance('mongoItemsCollection');
	 }

	/**
	 * @return MongoCollection
	 */
	 public static function getMongoPackagesCollection() {
	 	return MoufManager::getMoufManager()->getInstance('mongoPackagesCollection');
	 }

	/**
	 * @return MongoDB
	 */
	 public static function getMongoPackanalystDb() {
	 	return MoufManager::getMoufManager()->getInstance('mongoPackanalystDb');
	 }

	/**
	 * @return HireVoice\Neo4j\EntityManager
	 */
	 public static function getNeo4jEntityManager() {
	 	return MoufManager::getMoufManager()->getInstance('neo4jEntityManager');
	 }

	/**
	 * @return Mouf\Utils\Cache\NoCache
	 */
	 public static function getNoCacheService() {
	 	return MoufManager::getMoufManager()->getInstance('noCacheService');
	 }

	/**
	 * @return Mouf\Utils\Common\Validators\NumericValidator
	 */
	 public static function getNumericValidatorDecimals() {
	 	return MoufManager::getMoufManager()->getInstance('numericValidatorDecimals');
	 }

	/**
	 * @return Mouf\Packanalyst\Dao\PackageDao
	 */
	 public static function getPackageDao() {
	 	return MoufManager::getMoufManager()->getInstance('packageDao');
	 }

	/**
	 * @return Mouf\Html\Renderer\FileBasedRenderer
	 */
	 public static function getPackageRenderer_moufhtml_widgets_menu() {
	 	return MoufManager::getMoufManager()->getInstance('packageRenderer_mouf/html.widgets.menu');
	 }

	/**
	 * @return Mouf\Html\Renderer\FileBasedRenderer
	 */
	 public static function getPackageRenderer_moufhtml_widgets_messageservice() {
	 	return MoufManager::getMoufManager()->getInstance('packageRenderer_mouf/html.widgets.messageservice');
	 }

	/**
	 * @return Mouf\Packanalyst\Repositories\PackageRepository
	 */
	 public static function getPackageRepository() {
	 	return MoufManager::getMoufManager()->getInstance('packageRepository');
	 }

	/**
	 * @return Mouf\Packanalyst\Repositories\PackageVersionRepository
	 */
	 public static function getPackageVersionRepository() {
	 	return MoufManager::getMoufManager()->getInstance('packageVersionRepository');
	 }

	/**
	 * @return Mouf\Utils\Log\Psr\ErrorLogLogger
	 */
	 public static function getPsr_errorLogLogger() {
	 	return MoufManager::getMoufManager()->getInstance('psr.errorLogLogger');
	 }

	/**
	 * @return Mouf\Utils\Cache\InMemoryCache
	 */
	 public static function getRendererCacheService() {
	 	return MoufManager::getMoufManager()->getInstance('rendererCacheService');
	 }

	/**
	 * @return Mouf\Utils\Common\Validators\RequiredValidator
	 */
	 public static function getRequiredValidator() {
	 	return MoufManager::getMoufManager()->getInstance('requiredValidator');
	 }

	/**
	 * @return Mouf\Packanalyst\Controllers\RootController
	 */
	 public static function getRootController() {
	 	return MoufManager::getMoufManager()->getInstance('rootController');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\InlineWebLibrary
	 */
	 public static function getRootUrlInlineWebLibrary() {
	 	return MoufManager::getMoufManager()->getInstance('rootUrlInlineWebLibrary');
	 }

	/**
	 * @return Mouf\Html\HtmlElement\HtmlFromFile
	 */
	 public static function getRootUrlJsFile() {
	 	return MoufManager::getMoufManager()->getInstance('rootUrlJsFile');
	 }

	/**
	 * @return Mouf\Utils\Session\SessionManager\DefaultSessionManager
	 */
	 public static function getSessionManager() {
	 	return MoufManager::getMoufManager()->getInstance('sessionManager');
	 }

	/**
	 * @return Mouf\Mvc\Splash\Splash
	 */
	 public static function getSplash() {
	 	return MoufManager::getMoufManager()->getInstance('splash');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Language\BrowserLanguageDetection
	 */
	 public static function getSplashBrowserLanguageDetection() {
	 	return MoufManager::getMoufManager()->getInstance('splashBrowserLanguageDetection');
	 }

	/**
	 * @return Mouf\Utils\Cache\ApcCache
	 */
	 public static function getSplashCacheApc() {
	 	return MoufManager::getMoufManager()->getInstance('splashCacheApc');
	 }

	/**
	 * @return Mouf\Utils\Cache\FileCache
	 */
	 public static function getSplashCacheFile() {
	 	return MoufManager::getMoufManager()->getInstance('splashCacheFile');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Translate\FinePHPArrayTranslationService
	 */
	 public static function getSplashTranslateService() {
	 	return MoufManager::getMoufManager()->getInstance('splashTranslateService');
	 }

	/**
	 * @return Mouf\Html\Utils\WebLibraryManager\WebLibrary
	 */
	 public static function getStylesWebLibrary() {
	 	return MoufManager::getMoufManager()->getInstance('stylesWebLibrary');
	 }

	/**
	 * @return Mouf\Html\Renderer\Twig\MoufTwigEnvironment
	 */
	 public static function getTwigEnvironment() {
	 	return MoufManager::getMoufManager()->getInstance('twigEnvironment');
	 }

	/**
	 * @return Mouf\Utils\Common\Validators\URLValidator
	 */
	 public static function getURLValidatorFtpHttps() {
	 	return MoufManager::getMoufManager()->getInstance('uRLValidatorFtpHttps');
	 }

	/**
	 * @return Mouf\Html\Widgets\MessageService\Service\SessionMessageService
	 */
	 public static function getUserMessageService() {
	 	return MoufManager::getMoufManager()->getInstance('userMessageService');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Language\BrowserLanguageDetection
	 */
	 public static function getValidatorsBrowserLanguageDetection() {
	 	return MoufManager::getMoufManager()->getInstance('validatorsBrowserLanguageDetection');
	 }

	/**
	 * @return Mouf\Utils\I18n\Fine\Translate\FinePHPArrayTranslationService
	 */
	 public static function getValidatorsTranslateService() {
	 	return MoufManager::getMoufManager()->getInstance('validatorsTranslateService');
	 }

}
?>
